# Project: adams
# Date: 2018-09-07 19:15:31
# User: fracpete
# Charset: UTF-8
# Modules: adams-access,adams-audio,adams-cntk,adams-cntk-weka,adams-compress,adams-core,adams-cqengine,adams-event,adams-excel,adams-ffmpeg,adams-gnuplot,adams-groovy,adams-groovy-webservice,adams-heatmap,adams-image-webservice,adams-imaging,adams-imaging-boofcv,adams-imaging-imagemagick,adams-imaging-openimaj,adams-jooq,adams-jython,adams-latex,adams-maps,adams-meka,adams-meka-webservice,adams-meta,adams-ml,adams-moa,adams-mongodb,adams-net,adams-nlp,adams-odf,adams-osm,adams-pdf,adams-phmm4weka,adams-python,adams-r,adams-random,adams-rats,adams-rest,adams-rsync,adams-spreadsheet,adams-timeseries,adams-twitter,adams-twitter-rats,adams-video,adams-visualstats,adams-webservice,adams-weka,adams-weka-webservice
#
adams.flow.control.Flow -annotation "Traverses a directory with .csv.gz files containing tweets,\\nlooking for :) :-) and :( :-( , visualizing the counts per hours." -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.SequencePlotter -writer adams.gui.print.NullWriter -paintlet adams.gui.visualization.sequence.LinePaintlet -overlay-paintlet "adams.gui.visualization.sequence.CirclePaintlet -meta-data-color adams.gui.visualization.sequence.metadatacolor.Dummy" -marker-paintlet adams.flow.sink.sequenceplotter.NoMarkers -error-paintlet adams.flow.sink.sequenceplotter.NoErrorPaintlet -mouse-click-action adams.flow.sink.sequenceplotter.NullClickAction -color-provider adams.gui.visualization.core.DefaultColorProvider -overlay-color-provider adams.gui.visualization.core.DefaultColorProvider -title "Twitter mood" -axis-x "adams.gui.visualization.core.AxisPanelOptions -label time -type DATETIME -tick-generator \"adams.gui.visualization.core.axis.FancyTickGenerator -num-ticks 20\" -nth-value 2 -width 40 -custom-format M/d-HH" -axis-y "adams.gui.visualization.core.AxisPanelOptions -label counts -tick-generator adams.gui.visualization.core.axis.FancyTickGenerator -nth-value 2 -width 60 -custom-format 0" -plot-updater adams.flow.sink.sequenceplotter.SimplePlotUpdater -post-processor adams.flow.sink.sequenceplotter.PassThrough
 adams.flow.source.Start
 adams.flow.control.Trigger -name "select directory"
  adams.flow.source.SelectDirectory -stop-if-canceled true -custom-stop-message "User canceled selection of tweet directory!" -dir-chooser-title "Select dir with tweet archives" -initial-dir ${TMP}
  adams.flow.transformer.SetVariable -var-name dir
 adams.flow.control.Trigger -name "read files"
  adams.flow.standalone.SetVariable -name "reset happy" -var-name happy -var-value 0
  adams.flow.standalone.SetVariable -name "reset sad" -var-name sad -var-value 0
  adams.flow.standalone.SetVariable -name "reset timestamp" -var-name timestamp_old -var-value ""
  adams.flow.source.FileSystemSearch -search "adams.flow.source.filesystemsearch.LocalFileSearch -directory @{dir} -regexp .*.gz -sorting SORT_BY_NAME"
  adams.flow.transformer.SetVariable -var-name file
  adams.flow.control.Trigger -name replay
   adams.flow.source.TweetReplay -replay "adams.data.io.input.SpreadSheetConverterArchive -archive @{file}"
   adams.flow.control.Count -condition "adams.flow.condition.bool.Counting -interval 10000"
    adams.flow.sink.Console -prefix "#tweets: "
   adams.flow.control.Tee -name "get timestamp"
    adams.flow.transformer.TwitterConverter -converter "adams.data.twitter.TextConverter -field CREATED -separator \\t -date-format \"yyyy-MM-dd HH\""
    adams.flow.transformer.SetVariable -var-name timestamp
   adams.flow.control.Block -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{timestamp}\\\\\\\" = \\\\\\\"?\\\\\\\"\""
   adams.flow.control.ConditionalTee -name happy? -condition "adams.flow.condition.bool.TwitterFilterExpression -expression \"text:\\\":)\\\" or text:\\\":-)\\\"\""
    adams.flow.transformer.IncVariable -var-name happy
   adams.flow.control.ConditionalTee -name sad? -condition "adams.flow.condition.bool.TwitterFilterExpression -expression \"text:\\\":(\\\" or text:\\\":-(\\\"\""
    adams.flow.transformer.IncVariable -var-name sad
   adams.flow.control.ConditionalTrigger -name "timestamp changed?" -condition "adams.flow.condition.bool.And -condition \"adams.flow.condition.bool.Counting -min 2\" -condition \"adams.flow.condition.bool.Expression -expression \\\"\\\\\\\\\\\\\\\"@{timestamp}\\\\\\\\\\\\\\\" != \\\\\\\\\\\\\\\"@{timestamp_old}\\\\\\\\\\\\\\\"\\\"\""
    adams.flow.source.Start
    adams.flow.control.Trigger -name "timestamp in msec"
     adams.flow.source.Variable -var-name timestamp -conversion adams.data.conversion.StringToString
     adams.flow.transformer.Convert -conversion "adams.data.conversion.StringToDateTimeType -format \"yyyy-MM-dd HH\" -datetime-type MSECS"
     adams.flow.transformer.SetVariable -var-name timestamp_msec
    adams.flow.control.Trigger -name happy
     adams.flow.source.VariablesArray -var-name timestamp_msec -var-name happy -conversion adams.data.conversion.StringToString
     adams.flow.control.ArrayProcess
      adams.flow.transformer.Convert -conversion adams.data.conversion.StringToDouble
     adams.flow.transformer.MakePlotContainer -plot-name happy
     adams.flow.sink.CallableSink -callable SequencePlotter
    adams.flow.control.Trigger -name sad
     adams.flow.source.VariablesArray -var-name timestamp_msec -var-name sad -conversion adams.data.conversion.StringToString
     adams.flow.control.ArrayProcess
      adams.flow.transformer.Convert -conversion adams.data.conversion.StringToDouble
     adams.flow.transformer.MakePlotContainer -plot-name sad
     adams.flow.sink.CallableSink -callable SequencePlotter
    adams.flow.control.Trigger -name "textual output" -skip true
     adams.flow.source.CombineVariables -expression "@{timestamp}: happy=@{happy} sad=@{sad}" -conversion adams.data.conversion.StringToString
     adams.flow.sink.Display -writer adams.data.io.output.NullWriter
    adams.flow.control.Trigger -name "reset counters"
     adams.flow.standalone.SetVariable -name "reset happy" -var-name happy -var-value 0
     adams.flow.standalone.SetVariable -name "reset sad" -var-name sad -var-value 0
   adams.flow.transformer.SetVariable -name "save timestamp" -var-name timestamp_old -var-value @{timestamp}