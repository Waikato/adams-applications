# Project: adams
# Date: 2019-12-19 11:38:37
# User: fracpete
# Charset: UTF-8
# Modules: adams-access,adams-audio,adams-cntk,adams-cntk-weka,adams-compress,adams-core,adams-cqengine,adams-db,adams-event,adams-excel,adams-ffmpeg,adams-gnuplot,adams-groovy,adams-groovy-rest,adams-groovy-webservice,adams-heatmap,adams-html,adams-image-webservice,adams-imaging,adams-imaging-boofcv,adams-imaging-imagemagick,adams-imaging-openimaj,adams-jooq,adams-json,adams-jython,adams-latex,adams-maps,adams-math,adams-meka,adams-meka-webservice,adams-meta,adams-ml,adams-moa,adams-mongodb,adams-net,adams-nlp,adams-odf,adams-osm,adams-pdf,adams-python,adams-python-weka,adams-r,adams-rabbitmq,adams-rabbitmq-rats,adams-random,adams-rats-core,adams-rats-net,adams-rats-rest,adams-rats-webservice,adams-rest,adams-rsync,adams-security,adams-spreadsheet,adams-tensorflow,adams-terminal,adams-timeseries,adams-twitter,adams-twitter-rats,adams-video,adams-visualstats,adams-webservice,adams-webservice-core,adams-weka,adams-weka-nd4j,adams-weka-webservice,adams-xml,adams-yaml
#
adams.flow.control.Flow -annotation "Demonstrates how to replay archived tweets (previously collected with ADAMS)\\nand visualize the sentiment - :) vs :( - over time on a map.\\n" -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.OpenStreetMapViewer -short-title true -display-type adams.flow.core.displaytype.Default -writer adams.gui.print.NullWriter -tile-source adams.flow.sink.openstreetmapviewer.OpenStreetMapSource -tile-loader adams.flow.sink.openstreetmapviewer.OpenStreetMapCachedLoader -hit-listener adams.flow.sink.openstreetmapviewer.SimpleMapObjectHitListener -click-listener adams.flow.sink.openstreetmapviewer.NullMapClickListener -mapobject-pruner "adams.flow.sink.openstreetmapviewer.SimplePruner -max-markers 100" -map-overlay "adams.flow.sink.openstreetmapviewer.TextMapOverlay -width 140 -variable-name timestamp" -initial-zoom 1 -layer Tweets -layer Tweets.happy -layer Tweets.sad
 adams.flow.source.SelectFile -stop-if-canceled true -custom-stop-message "User canceled selection of tweet spreadsheet archive!" -file-chooser-title "Select tweet archive" -initial-dir ${FLOWS}/output -extension .csv.gz,.csv
 adams.flow.transformer.SetVariable -var-name file
 adams.flow.control.Trigger -name "replay tweets"
  adams.flow.source.TweetReplay -replay "adams.data.io.input.SpreadSheetConverterArchive -archive @{file}"
  adams.flow.control.Block -condition "adams.flow.condition.bool.TwitterFilterExpression -expression \"not(has(latitude) and has(longitude))\""
  adams.flow.control.Tee -name timestamp
   adams.flow.transformer.TwitterConverter -converter "adams.data.twitter.TextConverter -field CREATED -separator \\t -date-format \"yyyy-MM-dd HH:mm\""
   adams.flow.transformer.SetVariable -var-name timestamp
  adams.flow.control.ConditionalTee -name happy -condition "adams.flow.condition.bool.TwitterFilterExpression -expression \"text:\\\":)\\\" or text:\\\":-)\\\"\""
   adams.flow.transformer.TwitterConverter -converter "adams.data.twitter.SpreadSheetConverter -field TEXT -field GEO_LATITUDE -field GEO_LONGITUDE -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet"
   adams.flow.transformer.Convert -name "join lat and lon" -conversion "adams.data.conversion.SpreadSheetJoinColumns -columns \"\\\"GEO_LATITUDE\\\",\\\"GEO_LONGITUDE\\\"\" -glue \" \" -column-name GPS"
   adams.flow.transformer.Convert -name "create GPS" -conversion "adams.data.conversion.SpreadSheetStringColumnToObject -no-copy true -column GPS -handler adams.data.spreadsheet.GPSDecimalDegrees"
   adams.flow.transformer.Convert -name "create mapobjects" -conversion "adams.data.conversion.SpreadSheetToMapObjects -generator \"adams.data.conversion.mapobject.SimpleDotMarkerGenerator -layer Tweets.happy -gps GPS -additional-attributes first-last -dot-color #9633cc00\""
   adams.flow.sink.CallableSink -callable OpenStreetMapViewer
  adams.flow.control.ConditionalTee -name sad -condition "adams.flow.condition.bool.TwitterFilterExpression -expression \"text:\\\":(\\\" or text:\\\":-(\\\"\""
   adams.flow.transformer.TwitterConverter -converter "adams.data.twitter.SpreadSheetConverter -field TEXT -field GEO_LATITUDE -field GEO_LONGITUDE -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet"
   adams.flow.transformer.Convert -name "join lat and lon" -conversion "adams.data.conversion.SpreadSheetJoinColumns -columns \"\\\"GEO_LATITUDE\\\",\\\"GEO_LONGITUDE\\\"\" -glue \" \" -column-name GPS"
   adams.flow.transformer.Convert -name "create GPS" -conversion "adams.data.conversion.SpreadSheetStringColumnToObject -no-copy true -column GPS -handler adams.data.spreadsheet.GPSDecimalDegrees"
   adams.flow.transformer.Convert -name "create mapobjects" -conversion "adams.data.conversion.SpreadSheetToMapObjects -generator \"adams.data.conversion.mapobject.SimpleDotMarkerGenerator -layer Tweets.sad -gps GPS -additional-attributes first-last -dot-color #96ff3300\""
   adams.flow.sink.CallableSink -callable OpenStreetMapViewer