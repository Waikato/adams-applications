# Project: adams
# Date: 2015-06-18 20:39:54
# User: fracpete
# Charset: UTF-8
#
adams.flow.control.Flow
	-annotation
	Demonstrates how to replay archived tweets (previously collected with ADAMS)\nand visualize the sentiment - :) vs :( - over time on a map.\n
	-actor
		adams.flow.standalone.CallableActors
			-actor
				adams.flow.sink.OpenStreetMapViewer
					-short-title
					true
					-writer
						adams.gui.print.NullWriter
					-tile-source
						adams.flow.sink.openstreetmapviewer.OpenStreetMapSource
					-tile-loader
						adams.flow.sink.openstreetmapviewer.OpenStreetMapCachedLoader
					-hit-listener
						adams.flow.sink.openstreetmapviewer.SimpleMapObjectHitListener
					-click-listener
						adams.flow.sink.openstreetmapviewer.NullMapClickListener
					-mapobject-pruner
						adams.flow.sink.openstreetmapviewer.SimplePruner
							-max-markers
							100
					-map-overlay
						adams.flow.sink.openstreetmapviewer.TextMapOverlay
							-width
							140
							-variable-name
							timestamp
					-initial-zoom
					1
					-layer
					Tweets
					-layer
					Tweets.happy
					-layer
					Tweets.sad
	-actor
		adams.flow.source.SelectFile
			-stop-if-canceled
			true
			-custom-stop-message
			User canceled selection of tweet spreadsheet archive!
			-file-chooser-title
			Select tweet archive
			-extension
			.csv.gz
			-extension
			.csv
	-actor
		adams.flow.transformer.SetVariable
			-var-name
			file
	-actor
		adams.flow.control.Trigger
			-name
			replay tweets
			-tee
				adams.flow.source.TweetReplay
					-replay
						adams.data.io.input.SpreadSheetConverterArchive
							-archive
							@{file}
			-tee
				adams.flow.control.Continue
					-condition
						adams.flow.condition.bool.TwitterFilterExpression
							-expression
							not(has(latitude) and has(longitude))
			-tee
				adams.flow.control.Tee
					-name
					timestamp
					-tee
						adams.flow.transformer.TwitterConverter
							-converter
								adams.data.twitter.TextConverter
									-field
									CREATED
									-separator
									\t
									-date-format
									yyyy-MM-dd HH:mm
					-tee
						adams.flow.transformer.SetVariable
							-var-name
							timestamp
			-tee
				adams.flow.control.ConditionalTee
					-name
					happy
					-tee
						adams.flow.transformer.TwitterConverter
							-converter
								adams.data.twitter.SpreadSheetConverter
									-field
									TEXT
									-field
									GEO_LATITUDE
									-field
									GEO_LONGITUDE
									-data-row-type
										adams.data.spreadsheet.DenseDataRow
									-spreadsheet-type
										adams.data.spreadsheet.SpreadSheet
					-tee
						adams.flow.transformer.Convert
							-name
							join lat and lon
							-conversion
								adams.data.conversion.SpreadSheetJoinColumns
									-columns
									"GEO_LATITUDE","GEO_LONGITUDE"
									-glue
									 
									-column-name
									GPS
					-tee
						adams.flow.transformer.Convert
							-name
							create GPS
							-conversion
								adams.data.conversion.SpreadSheetStringColumnToObject
									-no-copy
									true
									-column
									GPS
									-handler
										adams.data.spreadsheet.GPSDecimalDegrees
					-tee
						adams.flow.transformer.Convert
							-name
							create mapobjects
							-conversion
								adams.data.conversion.SpreadSheetToMapObjects
									-generator
										adams.data.conversion.mapobject.SimpleDotMarkerGenerator
											-layer
											Tweets.happy
											-gps
											GPS
											-additional-attributes
											first-last
											-dot-color
											#9633cc00
					-tee
						adams.flow.sink.CallableSink
							-callable
							OpenStreetMapViewer
					-condition
						adams.flow.condition.bool.TwitterFilterExpression
							-expression
							text:":)" or text:":-)"
			-tee
				adams.flow.control.ConditionalTee
					-name
					sad
					-tee
						adams.flow.transformer.TwitterConverter
							-converter
								adams.data.twitter.SpreadSheetConverter
									-field
									TEXT
									-field
									GEO_LATITUDE
									-field
									GEO_LONGITUDE
									-data-row-type
										adams.data.spreadsheet.DenseDataRow
									-spreadsheet-type
										adams.data.spreadsheet.SpreadSheet
					-tee
						adams.flow.transformer.Convert
							-name
							join lat and lon
							-conversion
								adams.data.conversion.SpreadSheetJoinColumns
									-columns
									"GEO_LATITUDE","GEO_LONGITUDE"
									-glue
									 
									-column-name
									GPS
					-tee
						adams.flow.transformer.Convert
							-name
							create GPS
							-conversion
								adams.data.conversion.SpreadSheetStringColumnToObject
									-no-copy
									true
									-column
									GPS
									-handler
										adams.data.spreadsheet.GPSDecimalDegrees
					-tee
						adams.flow.transformer.Convert
							-name
							create mapobjects
							-conversion
								adams.data.conversion.SpreadSheetToMapObjects
									-generator
										adams.data.conversion.mapobject.SimpleDotMarkerGenerator
											-layer
											Tweets.sad
											-gps
											GPS
											-additional-attributes
											first-last
											-dot-color
											#96ff3300
					-tee
						adams.flow.sink.CallableSink
							-callable
							OpenStreetMapViewer
					-condition
						adams.flow.condition.bool.TwitterFilterExpression
							-expression
							text:":(" or text:":-("
	-flow-execution-listener
		adams.flow.execution.NullListener

