# Project: adams
# Date: 2019-12-19 11:19:41
# User: fracpete
# Charset: UTF-8
# Modules: adams-access,adams-audio,adams-cntk,adams-cntk-weka,adams-compress,adams-core,adams-cqengine,adams-db,adams-event,adams-excel,adams-ffmpeg,adams-gnuplot,adams-groovy,adams-groovy-rest,adams-groovy-webservice,adams-heatmap,adams-html,adams-image-webservice,adams-imaging,adams-imaging-boofcv,adams-imaging-imagemagick,adams-imaging-openimaj,adams-jooq,adams-json,adams-jython,adams-latex,adams-maps,adams-math,adams-meka,adams-meka-webservice,adams-meta,adams-ml,adams-moa,adams-mongodb,adams-net,adams-nlp,adams-odf,adams-osm,adams-pdf,adams-python,adams-python-weka,adams-r,adams-rabbitmq,adams-rabbitmq-rats,adams-random,adams-rats-core,adams-rats-net,adams-rats-rest,adams-rats-webservice,adams-rest,adams-rsync,adams-security,adams-spreadsheet,adams-tensorflow,adams-terminal,adams-timeseries,adams-twitter,adams-twitter-rats,adams-video,adams-visualstats,adams-webservice,adams-webservice-core,adams-weka,adams-weka-nd4j,adams-weka-webservice,adams-xml,adams-yaml
#
adams.flow.control.Flow -annotation "Executes jobs it receives on the \\\"jobs\\\" queue and sends them back once executed." -error-handling ACTORS_DECIDE_TO_STOP_ON_ERROR -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.Display -name Info -short-title true -display-type adams.flow.core.displaytype.Default -x -3 -writer adams.data.io.output.NullWriter
 adams.flow.standalone.RabbitMQConnection -host localhost
 adams.flow.standalone.RabbitMQChannelAction -action "adams.core.net.rabbitmq.channelaction.DeclareQueue -queue jobs"
 adams.flow.source.RabbitMQConsume -queue jobs -auto-ack false -converter adams.core.net.rabbitmq.receive.BinaryConverter -output-container true
 adams.flow.control.ContainerValuePicker -name "ContainerValuePicker (1)" -value Properties
  adams.flow.transformer.Convert -conversion adams.data.conversion.RabbitMQPropertiesToMap
  adams.flow.transformer.GetMapValue -key ReplyTo
  adams.flow.transformer.SetVariable -var-name replyto
 adams.flow.control.ContainerValuePicker -name "ContainerValuePicker (2)" -value Data
  adams.flow.transformer.ExecuteJobs
  adams.flow.transformer.SetStorageValue -storage-name data
 adams.flow.control.ContainerValuePicker -name "ContainerValuePicker (3)" -value Envelope
  adams.flow.transformer.Convert -conversion adams.data.conversion.RabbitMQEnvelopeToMap
  adams.flow.transformer.GetMapValue -key DeliveryTag
  adams.flow.transformer.SetVariable -var-name deliverytag
 adams.flow.control.ContainerValuePicker -name "ContainerValuePicker (4)" -value Channel
  adams.flow.transformer.SetStorageValue -storage-name channel
 adams.flow.control.Trigger -name info
  adams.flow.source.CombineVariables -expression "start: @{replyto}" -conversion adams.data.conversion.StringToString
  adams.flow.sink.CallableSink -callable Info
 adams.flow.control.Trigger -name "send back"
  adams.flow.source.StorageValue -storage-name data -conversion adams.data.conversion.UnknownToUnknown
  adams.flow.sink.RabbitMQPublish -queue @{replyto} -converter adams.core.net.rabbitmq.send.BinaryConverter
 adams.flow.control.Trigger -name "acknowledge message using deliverytag and channel"
  adams.flow.source.Variable -var-name deliverytag -conversion adams.data.conversion.StringToLong
  adams.flow.sink.RabbitMQMessageDeliveryAction -storage-name channel -action adams.core.net.rabbitmq.deliveryaction.Ack
 adams.flow.control.Trigger -name "info (2)"
  adams.flow.source.CombineVariables -expression "finished: @{replyto}" -conversion adams.data.conversion.StringToString
  adams.flow.sink.CallableSink -callable Info